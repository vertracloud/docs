{
  "openapi": "3.1.0",
  "info": {
    "title": "OpenAPI Plant Store",
    "description": "A sample API that uses a plant store as an example to demonstrate features in the OpenAPI specification",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.vertracloud.app"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/v1/status": {
      "get": {
        "description": "Checks if the infrastructure is fully operational.",
        "responses": {
          "200": {
            "description": "Current infrastructure status details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": ["healthy", "unknown", "degraded"],
                      "example": "healthy"
                    },
                    "response": {
                      "type": "string",
                      "enum": [
                        "All systems operational",
                        "Some systems are degraded",
                        "Some systems are down"
                      ],
                      "example": "All systems operational"
                    }
                  },
                  "required": ["status", "response"]
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "code": { "type": "string", "example": "BAD_REQUEST" },
                    "response": {
                      "type": "string",
                      "example": "Invalid parameters"
                    }
                  },
                  "required": ["status", "code", "response"]
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/v1/users/@me": {
      "get": {
        "description": "Returns the main data of all applications, databases, and information about the authenticated user's plan.",
        "responses": {
          "200": {
            "description": "User information including applications, databases, and plan details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" },
                    "response": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": "1085944713435160717"
                        },
                        "email": {
                          "type": "string",
                          "example": "test@gmail.com"
                        },
                        "name": { "type": "string", "example": "test" },
                        "provider": { "type": "string", "example": "discord" },
                        "plan_id": { "type": "integer", "example": 1 },
                        "created_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-08-08T01:26:04.784Z"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time",
                          "example": "2025-08-14T22:10:31.220Z"
                        },
                        "applications": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "v111d4af8cd74272a284831fbae14a8v"
                              },
                              "cluster": { "type": "integer", "example": 1 },
                              "name": {
                                "type": "string",
                                "example": "Simple API"
                              },
                              "description": {
                                "type": "string",
                                "example": "I have a description :)"
                              },
                              "status": { "type": "string", "example": "up" },
                              "type": { "type": "integer", "example": 1 },
                              "ram": { "type": "integer", "example": 128 },
                              "language": {
                                "type": "string",
                                "example": "nodejs"
                              },
                              "subdomain": {
                                "type": ["string", "null"],
                                "example": null
                              },
                              "custom_domain": {
                                "type": ["string", "null"],
                                "example": null
                              },
                              "owner_id": {
                                "type": "string",
                                "example": "1085944713435160717"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-09T15:51:47.234Z"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-11T15:06:41.449Z"
                              },
                              "last_commit": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-09T15:51:47.234Z"
                              },
                              "last_backup": {
                                "type": ["string", "null"],
                                "format": "date-time",
                                "example": null
                              },
                              "last_deploy": {
                                "type": ["string", "null"],
                                "format": "date-time",
                                "example": null
                              },
                              "owner_plan_id": {
                                "type": "integer",
                                "example": 1
                              }
                            }
                          }
                        },
                        "databases": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "v41806687fe6488884a464d1dc06692v"
                              },
                              "cluster": { "type": "integer", "example": 1 },
                              "name": {
                                "type": "string",
                                "example": "Vertra v4180668"
                              },
                              "description": {
                                "type": "string",
                                "example": "MongoDB Database"
                              },
                              "status": { "type": "string", "example": "up" },
                              "type": { "type": "integer", "example": 2 },
                              "ram": { "type": "integer", "example": 2048 },
                              "storage": { "type": "integer", "example": 1024 },
                              "host": {
                                "type": "string",
                                "example": "vertra-cloud-mongodb-v41806687fe6488884a464d1dc06692v.db.vertraweb.app"
                              },
                              "port": { "type": "integer", "example": 27017 },
                              "owner_id": {
                                "type": "string",
                                "example": "1085944713435160717"
                              },
                              "plan_id": { "type": "integer", "example": 5 },
                              "duration": { "type": "integer", "example": 30 },
                              "purchased_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-09T22:00:54.785Z"
                              },
                              "expires_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-08T22:00:54.785Z"
                              },
                              "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-09T22:00:54.785Z"
                              },
                              "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-08-09T22:13:38.489Z"
                              },
                              "last_backup": {
                                "type": ["string", "null"],
                                "format": "date-time",
                                "example": null
                              },
                              "owner_plan_id": {
                                "type": "integer",
                                "example": 1
                              }
                            }
                          }
                        },
                        "plan": {
                          "type": "object",
                          "properties": {
                            "id": { "type": "integer", "example": 1 },
                            "name": { "type": "string", "example": "free" },
                            "expires_at": {
                              "type": ["string", "null"],
                              "format": "date-time",
                              "example": null
                            },
                            "duration": { "type": "integer", "example": 0 },
                            "memory": {
                              "type": "object",
                              "properties": {
                                "limit": { "type": "integer", "example": 128 },
                                "used": { "type": "integer", "example": 128 }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "code": { "type": "string", "example": "FORBIDDEN" },
                    "response": {
                      "type": "string",
                      "example": "Invalid parameters"
                    }
                  },
                  "required": ["status", "code", "response"]
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/v1/apps/{id}/start": {
      "post": {
        "description": "Starts an application by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the application to start."
          }
        ],
        "responses": {
          "200": {
            "description": "Application started successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or application could not be started.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "code": { "type": "string", "example": "APP_START_FAILED" },
                    "response": {
                      "type": "string",
                      "example": "Unable to start application."
                    }
                  },
                  "required": ["status", "code"]
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/v1/apps/{id}/restart": {
      "post": {
        "description": "Restarts an application by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the application to restart."
          }
        ],
        "responses": {
          "200": {
            "description": "Application restarted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or application could not be restarted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "code": {
                      "type": "string",
                      "example": "APP_RESTART_FAILED"
                    },
                    "response": {
                      "type": "string",
                      "example": "Unable to restart application."
                    },
                    "required": ["status", "code"]
                  }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    },
    "/v1/apps/{id}/stop": {
      "post": {
        "description": "Stops an application by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "The ID of the application to stop."
          }
        ],
        "responses": {
          "200": {
            "description": "Application stopped successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "success" }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request or application could not be stopped.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "string", "example": "error" },
                    "code": { "type": "string", "example": "APP_STOP_FAILED" },
                    "response": {
                      "type": "string",
                      "example": "Unable to stop application."
                    },
                    "required": ["status", "code"]
                  }
                }
              }
            }
          }
        },
        "security": [{ "bearerAuth": [] }]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
